name: main Spring boilerplate
on:
  push:
    branches: ['main']
  pull_request:
  workflow_dispatch:

env:
  PROJECT_DIR: ${{ github.workspace }}/api
  MAVEN_OPTS: "-Djava.awt.headless=true"
  MAVEN_CLI_OPTS: "--batch-mode --fail-at-end"

jobs:

#######################################################

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-24.04
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.PROJECT_DIR }}
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: "0" # Needed for git metadata embedded in jar

      - name: Detect git paths casing issues
        working-directory: ${{ github.workspace }}
        run:  bash "${{ github.workspace }}/.ci/scripts/detect-case-sensitivity-issues-in-paths.sh"

      - name: Setup Maven
        id: setup-maven
        uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 # v4
        with:
          distribution: 'temurin'
          java-version: '17.0.14+7'
          cache: 'maven'

      - name: Download all dependencies
        if: steps.setup-maven.outputs.cache-hit != 'true'
        run: |
          cd $PROJECT_DIR
          ./mvnw $MAVEN_CLI_OPTS dependency:resolve-plugins dependency:go-offline de.qaware.maven:go-offline-maven-plugin:resolve-dependencies

      - name: Run unit tests
        run:  ./mvnw $MAVEN_CLI_OPTS clean verify

      - name: Upload jar artifact
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4
        with:
          name: api-jar-artifact
          retention-days: "1"
          path: |
            ${{ env.PROJECT_DIR }}/target/*.jar

      - name: Add coverage to PR
        if: github.event_name == 'pull_request'
        uses: madrapps/jacoco-report@94dfcf8dae9680be2cfa714ca37fb37790bd7663 # v1.6
        continue-on-error: true
        with:
          paths: ${{ env.PROJECT_DIR }}/target/site/jacoco/jacoco.xml
          token: ${{ github.token }}
          min-coverage-overall: "40"
          min-coverage-changed-files: "60"

#####################################################

  migrations-tests:
    name: Migration Tests
    runs-on: ubuntu-24.04
    needs: unit-tests
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.PROJECT_DIR }}
    timeout-minutes: 10
    env:
      CHANGELOG_FILE: target/changelog-${{ github.job }}.yaml
    services:
      postgres:
        image: postgres:17.2@sha256:3267c505060a0052e5aa6e5175a7b41ab6b04da2f8c4540fc6e98a37210aa2d3
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: db
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:

      - name: Check out repository code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        
      - name: Check for destructive queries
        run: bash "${{ github.workspace }}/.ci/scripts/check_destructive_queries.sh" 

      - name: Setup Maven
        id: setup-maven
        uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 # v4
        with:
          distribution: 'temurin'
          java-version: '17.0.14+7'
          cache: 'maven'

      - name: Run liquibase sanity check
        run: |
          mkdir -p ${{ env.PROJECT_DIR }}/target/{classes,test-classes} # to mute the "Cannot create filesystem for url" warning
          ls -d ${{ env.PROJECT_DIR }}/target/{classes,test-classes}          
          ./mvnw $MAVEN_CLI_OPTS \
            "-Dliquibase.config.dbhost=localhost" \
            "-Dliquibase.config.promptOnNonLocalDatabase=false" \
            "-Dliquibase.diffChangeLogFile=$CHANGELOG_FILE" \
          compile liquibase:diff
          if [ ! -f "$CHANGELOG_FILE" ]; then
            echo "Was expecting to find a changelog file at $CHANGELOG_FILE, but it was not found."
            exit 1
          fi
          rm -f $CHANGELOG_FILE

      - name: Check migrations Sync
        run: |
          mkdir -p ${{ env.PROJECT_DIR }}/target/{classes,test-classes} # to mute the "Cannot create filesystem for url" warning
          ls -d ${{ env.PROJECT_DIR }}/target/{classes,test-classes}          
          ./mvnw $MAVEN_CLI_OPTS \
            "-Dliquibase.config.dbhost=localhost" \
            "-Dliquibase.config.promptOnNonLocalDatabase=false" \
            "-Dliquibase.diffChangeLogFile=$CHANGELOG_FILE" \
          liquibase:update liquibase:diff
          if [ -f "$CHANGELOG_FILE" ]; then
            echo "::error file=changelog-master.yaml::Your entities are not in sync with your migrations. Did you forget to run 'make makeMigration' ?"
            exit 1
          fi

#######################################################

  dependency-security-check:
    name: Vulnerability check for new dependencies
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-24.04
    needs: unit-tests
    defaults:
      run:
        shell: bash
    timeout-minutes: 15
    steps:

      - name: Check out repository code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: "0" # Needed the get this branch forking commit

      - name: Setup Maven
        id: setup-maven
        uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 # v4
        with:
          distribution: 'temurin'
          java-version: '17.0.14+7'
          cache: 'maven'

      - name: Get Dependency Check config from POM.XML
        id: dependency-check-config
        run: |
          echo "::set-output name=version::$(grep -Po '\K<org\.owasp\.dependency-check-maven\.version>\K.+?(?=</org\.owasp\.dependency-check-maven\.version>)' $PROJECT_DIR/pom.xml)"
          echo "::set-output name=failBuildOnCVSS::$(grep -Po '\K<failBuildOnCVSS>\K.+?(?=</failBuildOnCVSS>)' $PROJECT_DIR/pom.xml)"
          echo "::set-output name=suppressionFile::$(grep -Po '\K<org\.owasp\.dependency-check-maven\.suppressionFile>\K.+?(?=</org\.owasp\.dependency-check-maven\.suppressionFile>)' $PROJECT_DIR/pom.xml)"

      - name: Cache Dependency Check
        id: dependency-check-cache
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4
        with:
          path: ${{ env.PROJECT_DIR }}/dependency-check/
          key: dependency-check-${{ runner.os }}-${{ steps.dependency-check-config.outputs.version }}

      - name: Download Dependency Checker
        if: steps.dependency-check-cache.outputs.cache-hit != 'true'
        run: |
          cd $PROJECT_DIR
          DEPENDENCY_CHECKER_VERSION=${{ steps.dependency-check-config.outputs.version }}
          echo DEPENDENCY_CHECKER_VERSION=$DEPENDENCY_CHECKER_VERSION
          wget -qO- https://github.com/jeremylong/DependencyCheck/releases/download/v${DEPENDENCY_CHECKER_VERSION}/dependency-check-${DEPENDENCY_CHECKER_VERSION}-release.zip | busybox unzip -

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Cache Dependency Check Database
        id: dependency-check-database-cache
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4
        with:
          path: ${{ env.PROJECT_DIR }}/dependency-check-database
          key: dependency-check-${{ runner.os }}-${{ steps.dependency-check-config.outputs.version }}-${{ steps.date.outputs.date }}
          restore-keys: |
            dependency-check-${{ runner.os }}-${{ steps.dependency-check-config.outputs.version }}-
            dependency-check-${{ runner.os }}-
            dependency-check-

      - name: Download Dependency Checker Database
        if: steps.dependency-check-database-cache.outputs.cache-hit != 'true'
        run: |
          cd $PROJECT_DIR
          mkdir -p ${PROJECT_DIR}/dependency-check-database/
          bash ./dependency-check/bin/dependency-check.sh --updateonly --data ${PROJECT_DIR}/dependency-check-database/ --nvdApiKey ${{ secrets.NVD_API_KEY }}

      - name: Run vulnerability check on new dependencies
        run: |
          FAIL_BUILD_ON_CVSS=${{ steps.dependency-check-config.outputs.failBuildOnCVSS }}
          SUPPRESSION_FILE=${PROJECT_DIR}/${{ steps.dependency-check-config.outputs.suppressionFile }}
          bash .ci/scripts/vul-check.sh ${PROJECT_DIR}/dependency-check/bin/dependency-check.sh $FAIL_BUILD_ON_CVSS $SUPPRESSION_FILE origin/$GITHUB_BASE_REF

      - name: Upload vulnerable new dependencies report
        if: ${{ failure() }}
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4
        with:
          name: vulnerable-dependencies-report
          retention-days: "1"
          path: |
            ${{ env.PROJECT_DIR }}/dependency-check-report.html

#######################################################

  check-reproducible-build:
    name: Build reproducibility check
    runs-on: ubuntu-24.04
    needs: unit-tests
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.PROJECT_DIR }}
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: "0" # Needed for git metadata embedded in jar (same as in the build job)

      - name: Setup Maven
        id: setup-maven
        uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 # v4
        with:
          distribution: 'temurin'
          java-version: '17.0.14+7'
          cache: 'maven'

      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4
        with:
          name: api-jar-artifact
          path: ${{ env.PROJECT_DIR }}/target/

      - name: Install previously built jar
        run: |
          ./mvnw $MAVEN_CLI_OPTS install:install-file -Dfile=$(ls target/*.jar)

      - name: Rebuild and compare with previous JAR
        run: |
          ./mvnw $MAVEN_CLI_OPTS clean package artifact:compare -DskipTests
          REPORT_FILENAME=$(basename `ls target/*.buildcompare`)
          grep -x "ko=0" target/*.buildcompare > /dev/null || { echo "::error file=$REPORT_FILENAME::The build is not reproducible. Check job artifact for details. Documentation: https://maven.apache.org/guides/mini/guide-reproducible-builds.html"; exit 1;}

      - name: Upload build reproducibility outputs
        if: ${{ failure() }}
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4
        with:
          name: build-reproducibility-outputs
          retention-days: "1"
          path: |
            ${{ env.PROJECT_DIR }}/target/*.buildcompare
            ${{ env.PROJECT_DIR }}/target/*.buildinfo
            ${{ env.PROJECT_DIR }}/target/*.jar
            ${{ env.PROJECT_DIR }}/target/reference/

      - name: Delete artifact
        if: ${{ success() && github.event_name == 'pull_request' }}
        uses: geekyeggo/delete-artifact@f275313e70c08f6120db482d7a6b98377786765b # v5
        with:
          name: api-jar-artifact

#######################################################

  check-docker-build:
    name: Docker build check
    runs-on: ubuntu-24.04
    needs: unit-tests
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.PROJECT_DIR }}
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4
        with:
          name: api-jar-artifact
          path: ${{ env.PROJECT_DIR }}/target/

      - name: Run Docker build
        run: |
          docker build -t test .
