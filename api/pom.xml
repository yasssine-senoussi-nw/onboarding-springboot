<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.4.2</version>
  </parent>
  <groupId>com.nimbleways</groupId>
  <artifactId>springboilerplate</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>springboilerplate</name>
  <description>Nimbleways Spring Boilerplate</description>
  <properties>
    <java.version>17</java.version>
    <!-- make sure the two owasp properties are defined in one line because it's parsed in scripts: <prop>value</prop> -->
    <org.owasp.dependency-check-maven.version>12.0.2</org.owasp.dependency-check-maven.version>
    <org.owasp.dependency-check-maven.suppressionFile>dependency-check-suppressions.xml</org.owasp.dependency-check-maven.suppressionFile>
    <liquibase.config.dbhost>localhost</liquibase.config.dbhost>
    <liquibase.config.dbport>5432</liquibase.config.dbport>
    <liquibase.config.promptOnNonLocalDatabase>true</liquibase.config.promptOnNonLocalDatabase>
    <project.build.outputTimestamp>${git.commit.time}</project.build.outputTimestamp>
    <checkerframework.version>3.49.0</checkerframework.version>
    <liquibase.version>4.31.0</liquibase.version>

    <!-- Challenge any change to these values with your TL and/or EM -->
    <domainMutationThreshold>90</domainMutationThreshold>
    <domainCoverageThreshold>90</domainCoverageThreshold>
    <domainTestStrengthThreshold>98</domainTestStrengthThreshold>
    <totalLineCoverage>80</totalLineCoverage>
    <totalBranchCoverage>60</totalBranchCoverage>
  </properties>

    <profiles>
        <profile>
            <id>boilerplate</id>
            <activation>
                <file>
                    <exists>src/main/java/com/nimbleways/springboilerplate/Application.java</exists>
                </file>
            </activation>
            <properties>
                <domainMutationThreshold>100</domainMutationThreshold>
                <domainCoverageThreshold>100</domainCoverageThreshold>
                <domainTestStrengthThreshold>100</domainTestStrengthThreshold>
                <totalLineCoverage>100</totalLineCoverage>
                <totalBranchCoverage>100</totalBranchCoverage>
            </properties>
        </profile>
    </profiles>

  <dependencies>
    <dependency>
      <groupId>org.checkerframework</groupId>
      <artifactId>checker-qual</artifactId>
      <version>${checkerframework.version}</version>
    </dependency>
    <dependency>
      <groupId>org.checkerframework</groupId>
      <artifactId>checker-util</artifactId>
      <version>${checkerframework.version}</version>
    </dependency>
    <dependency>
      <!-- fix compile errors -->
      <groupId>biz.aQute.bnd</groupId>
      <artifactId>biz.aQute.bndlib</artifactId>
      <version>7.1.0</version>
      <scope>provided</scope>
    </dependency>

      <!-- fix compile errors -->
      <dependency>
          <groupId>com.google.code.findbugs</groupId>
          <artifactId>annotations</artifactId>
          <version>3.0.1u2</version>
          <scope>compile</scope>
      </dependency>
    <!-- SPRING DEPENDENCIES -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
    </dependency>

    <!-- TEST DEPENDENCIES -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>5.11.4</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mock-server</groupId>
      <artifactId>mockserver-junit-jupiter</artifactId>
      <version>5.15.0</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <!-- Fixes "java.lang.NoSuchMethodError: 'io.swagger.v3.core.converter.ModelConverters io.swagger.v3.core.converter.ModelConverters.getInstance(boolean)'" -->
          <groupId>io.swagger.parser.v3</groupId>
          <artifactId>swagger-parser</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <!-- Fixes "java.lang.ClassNotFoundException: com.github.fge.jackson.JacksonUtils" -->
      <!-- The exception is due to the exclusion of swagger in the mockserver-junit-jupiter dependency -->
      <groupId>com.github.java-json-tools</groupId>
      <artifactId>jackson-coreutils</artifactId>
      <version>2.0</version>
      <scope>test</scope>
    </dependency>

    <!-- ArchUnit junit5 dependency -->
    <dependency>
      <groupId>com.tngtech.archunit</groupId>
      <artifactId>archunit-junit5</artifactId>
      <version>1.4.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-testcontainers</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-docker-compose</artifactId>
      <optional>true</optional>
    </dependency>


    <!-- DATABASE -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>42.7.5</version>
      <scope>runtime</scope>
      <exclusions>
        <exclusion>
          <groupId>org.checkerframework</groupId>
          <artifactId>checker-qual</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- TODO: do we need liquibase in the app jar ? it adds 4.5MB -->
    <dependency>
      <groupId>org.liquibase</groupId>
      <artifactId>liquibase-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.liquibase.ext</groupId>
      <artifactId>liquibase-hibernate6</artifactId>
      <version>${liquibase.version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.h2database</groupId>
          <artifactId>h2</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.derby</groupId>
          <artifactId>derby</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- OTHER DEPENDENCIES -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
      <version>2.8.4</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <!-- To fix warning "unknown enum constant javax.annotation.meta.When.MAYBE" -->
    <!-- See https://docs.spring.io/spring-framework/reference/core/null-safety.html#jsr-305-meta-annotations -->
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
      <version>3.0.2</version>
      <scope>provided</scope>
    </dependency>


    <!-- SECURITY -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    <dependency>
      <groupId>io.jsonwebtoken</groupId>
      <artifactId>jjwt</artifactId>
      <version>0.12.6</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- External API Calls -->
    <dependency>
      <groupId>com.squareup.okhttp3</groupId>
      <artifactId>okhttp</artifactId>
      <version>4.12.0</version>
    </dependency>
    <dependency>
      <groupId>com.squareup.retrofit2</groupId>
      <artifactId>retrofit</artifactId>
      <version>2.11.0</version>
    </dependency>
    <dependency>
      <groupId>com.squareup.retrofit2</groupId>
      <artifactId>converter-jackson</artifactId>
      <version>2.11.0</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.collections</groupId>
      <artifactId>eclipse-collections</artifactId>
      <version>11.1.0</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-eclipse-collections</artifactId>
      <version>2.18.2</version>
    </dependency>
    <dependency>
      <groupId>cc.jilt</groupId>
      <artifactId>jilt</artifactId>
      <version>1.7</version>
      <scope>provided</scope> <!-- Jilt is not needed at runtime -->
    </dependency>
  </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>jakarta.validation</groupId>
                <artifactId>jakarta.validation-api</artifactId>
                <version>3.1.1</version>
            </dependency>

            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp</artifactId>
                <version>4.12.0</version>
            </dependency>

            <dependency>
                <groupId>org.eclipse.collections</groupId>
                <artifactId>eclipse-collections</artifactId>
                <version>11.1.0</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-text</artifactId>
                <version>1.13.0</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

  <build>
    <plugins>
      <plugin>
        <groupId>org.pitest</groupId>
        <artifactId>pitest-maven</artifactId>
        <version>1.18.1</version>
        <dependencies>
          <dependency>
            <groupId>org.pitest</groupId>
            <artifactId>pitest-junit5-plugin</artifactId>
            <version>1.2.1</version>
          </dependency>
        </dependencies>
        <configuration>
          <targetClasses>
            <param>*.domain.*</param>
            <param>*.utils.*</param>
          </targetClasses>
          <targetTests>
            <param>*.domain.*</param>
            <param>*.utils.*</param>
            <param>*.Fake*UnitTests</param>
          </targetTests>
          <mutators>
            <mutator>ALL</mutator>
            <mutator>-INLINE_CONSTS</mutator> <!-- see https://github.com/hcoles/pitest/issues/186 -->
          </mutators>
          <avoidCallsTo>
            <avoidCallsTo>org.checkerframework.checker.nullness.util.NullnessUtil</avoidCallsTo>
          </avoidCallsTo>
          <mutationThreshold>${domainMutationThreshold}</mutationThreshold>
          <coverageThreshold>${domainCoverageThreshold}</coverageThreshold>
          <testStrengthThreshold>${domainTestStrengthThreshold}</testStrengthThreshold>
          <features>
            <feature>+auto_threads</feature>
            <feature>+macos_focus</feature>
          </features>
          <jvmArgs>
            <jvmArg>-Djunit.jupiter.execution.timeout.mode=disabled</jvmArg>
          </jvmArgs>
        </configuration>
        <executions>
          <execution>
            <id>pitest</id>
            <phase>verify</phase>
            <goals>
              <goal>mutationCoverage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <!-- SUREFIRE -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <!-- JUnit 5 requires Surefire version 2.22.0 or higher -->
        <version>3.5.2</version>
        <configuration>
          <excludes>
            <exclude>**/*IntegrationTests.java</exclude>
            <exclude>**/*E2ETests.java</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>test</goal>
            </goals>
            <phase>integration-test</phase>
            <configuration>
              <excludes>
                <exclude>none</exclude>
              </excludes>
              <includes>
                <include>**/*IntegrationTests.java</include>
                <include>**/*E2ETests.java</include>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- LIQUIBASE -->
      <plugin>
        <groupId>org.liquibase</groupId>
        <artifactId>liquibase-maven-plugin</artifactId>
        <configuration>
          <changeLogFile>db/changelog-master.yaml</changeLogFile>
          <url>jdbc:postgresql://${liquibase.config.dbhost}:${liquibase.config.dbport}/db</url>
          <username>user</username>
          <password>password</password>
          <driver>org.postgresql.Driver</driver>
          <referenceUrl>
            hibernate:spring:com.nimbleways.springboilerplate?dialect=org.hibernate.dialect.PostgreSQLDialect
          </referenceUrl>
          <promptOnNonLocalDatabase>${liquibase.config.promptOnNonLocalDatabase}
          </promptOnNonLocalDatabase>
        </configuration>
        <!-- required in order for liquibase to run correctly -->
        <dependencies>
          <dependency>
            <groupId>org.liquibase.ext</groupId>
            <artifactId>liquibase-hibernate6</artifactId>
            <version>${liquibase.version}</version>
            <!-- This exclusion is to avoid the creation of a derby.log file in project root -->
            <!-- See https://github.com/liquibase/liquibase/issues/2196#issuecomment-987296693 -->
            <exclusions>
              <exclusion>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-test-harness</artifactId>
              </exclusion>
            </exclusions>
          </dependency>
          <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <version>${project.parent.version}</version>
          </dependency>
          <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${project.parent.version}</version>
          </dependency>
          <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
            <version>${project.parent.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <!-- LOMBOK-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.13.0</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <showWarnings>true</showWarnings>
          <compilerArgs>
            <arg>-Werror</arg>
            <arg>-Xlint:all</arg>
            <!-- https://stackoverflow.com/a/69734707 -->
            <arg>-Xlint:-processing</arg>
            <!-- https://github.com/projectlombok/lombok/wiki/WHY-NOT:-serialVersionUID -->
            <arg>-Xlint:-serial</arg>
            <arg>-AsuppressWarnings=nullness:contracts.conditional.postcondition,allcheckers:type.anno.before.modifier,allcheckers:type.anno.before.decl.anno,keyfor</arg>
            <arg>-Astubs=${basedir}/src/main/stubs</arg>
            <arg>-AskipFiles=/src/test/|/target/</arg>
            <arg>-Alint=all</arg>
            <arg>-AwarnUnneededSuppressions</arg>
            <arg>-AshowPrefixInWarningMessages</arg>
            <arg>-AassumePure</arg>
          </compilerArgs>
          <annotationProcessorPaths>
            <path>
              <groupId>org.checkerframework</groupId>
              <artifactId>checker</artifactId>
              <version>${checkerframework.version}</version>
            </path>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
            <path>
              <groupId>cc.jilt</groupId>
              <artifactId>jilt</artifactId>
              <version>1.7</version>
            </path>
          </annotationProcessorPaths>
          <annotationProcessors>
            <annotationProcessor>lombok.launch.AnnotationProcessorHider$AnnotationProcessor</annotationProcessor>
            <annotationProcessor>org.checkerframework.checker.nullness.NullnessChecker</annotationProcessor>
            <annotationProcessor>org.jilt.JiltAnnotationProcessor</annotationProcessor>
          </annotationProcessors>
        </configuration>
      </plugin>
      <!-- JACOCO -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.12</version>
        <executions>
          <execution>
            <id>coverage-initialize</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>coverage-report</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
          <execution>
            <id>coverage-check</id>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <rules>
                <rule>
                  <element>BUNDLE</element>
                  <excludes/>
                  <limits>
                    <limit>
                      <counter>LINE</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>${totalLineCoverage}%</minimum>
                    </limit>
                    <limit>
                      <counter>BRANCH</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>${totalBranchCoverage}%</minimum>
                    </limit>
                  </limits>
                </rule>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- PMD -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>3.26.0</version>
        <configuration>
          <!-- failOnViolation is actually true by default, but can be disabled -->
          <failOnViolation>true</failOnViolation>
          <!-- printFailingErrors is pretty useful -->
          <printFailingErrors>true</printFailingErrors>
          <!-- disable "Unable to locate Source XRef to link to" warning -->
          <linkXRef>false</linkXRef>
          <includeTests>true</includeTests>
          <excludeRoots>
            <excludeRoot>target</excludeRoot>
          </excludeRoots>
          <rulesets>
            <ruleset>pmd/pmd-rule-set.xml</ruleset>
          </rulesets>
        </configuration>
        <executions>
          <execution>
            <id>pmd-check</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- DEPENDENCY CHECK -->
      <plugin>
        <groupId>org.owasp</groupId>
        <artifactId>dependency-check-maven</artifactId>
        <version>${org.owasp.dependency-check-maven.version}</version>
        <configuration>
          <suppressionFile>${org.owasp.dependency-check-maven.suppressionFile}</suppressionFile>
          <cveValidForHours>24</cveValidForHours>
          <failBuildOnCVSS>8</failBuildOnCVSS>
          <!-- Disable .Net contents -->
          <assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
          <nugetconfAnalyzerEnabled>false</nugetconfAnalyzerEnabled>
          <nuspecAnalyzerEnabled>false</nuspecAnalyzerEnabled>
          <retireJsAnalyzerEnabled>false</retireJsAnalyzerEnabled>
        </configuration>
      </plugin>
      <plugin>
        <groupId>io.github.git-commit-id</groupId>
        <artifactId>git-commit-id-maven-plugin</artifactId>
        <version>9.0.1</version>
        <configuration>
          <offline>true</offline>
          <dateFormat>yyyy-MM-dd'T'HH:mm:ssX</dateFormat>
          <dateFormatTimeZone>UTC</dateFormatTimeZone>
          <excludeProperties>
            <excludeProperty>git.build.host</excludeProperty>
            <excludeProperty>git.build.number</excludeProperty>
            <excludeProperty>git.build.number.unique</excludeProperty>
            <excludeProperty>git.build.time</excludeProperty>
            <excludeProperty>git.build.user.email</excludeProperty>
            <excludeProperty>git.build.user.name</excludeProperty>
          </excludeProperties>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.5.0</version>
        <executions>
          <execution>
            <id>enforce</id>
            <configuration>
              <rules>
                <!-- rules list: https://maven.apache.org/enforcer/enforcer-rules/index.html -->
                <banDuplicatePomDependencyVersions/>
                <requireUpperBoundDeps/>
                <dependencyConvergence/>
              </rules>
            </configuration>
            <goals>
              <goal>enforce</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-help-plugin</artifactId>
            <version>3.5.1</version>
            <executions>
                <execution>
                    <id>show-profiles</id>
                    <phase>compile</phase>
                    <goals>
                        <goal>active-profiles</goal>
                    </goals>
                </execution>
            </executions>
        </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <!-- this is needed for pom.xml reproducibility check. Link: https://stackoverflow.com/a/63940353 -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>3.1.3</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

</project>
