default:
  image: openjdk:17-jdk-alpine@sha256:4b6abae565492dbe9e7a894137c966a7485154238902f2f25e9dbd9784383d81

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Djava.awt.headless=true"
  MAVEN_CLI_OPTS: "--batch-mode --fail-at-end"
  DOCKER_HOST: "tcp://docker:2375"
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2

cache:
  paths:
    - .m2/repository

workflow:
  rules:
    - if: '$CI_MERGE_REQUEST_IID'
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'

stages:
  - tests
  - after_tests

api:tests:
  stage: tests
  services:
    - name: docker:dind@sha256:ba55987d5a560d321a148e9e33b9d465b9badf0400c5e3fa06b38c0048062294
      command: [ "--tls=false" ]
  script:
    - cd api
    - ./mvnw $MAVEN_CLI_OPTS clean verify
#   Report coverage to GitLab's MR overview
    - awk -F"," '{ instructions += $4 + $5; instructionsCovered += $5;
      branches += $6 + $7; branchesCovered += $7;
      lines += $8 + $9; linesCovered += $9;
      conditions += $10 + $11; conditionsCovered += $11;
      methods += $12 + $13; methodsCovered += $13 }
      END { print "Instructions coverage :", 100*instructionsCovered/instructions;
      print "Branches coverage :", 100*branchesCovered/branches;
      print "Lines coverage :", 100*linesCovered/lines;
      print "Cyclomatic complexity coverage :", 100*conditionsCovered/conditions;
      print "Methods coverage :", 100*methodsCovered/methods;
      print "Average code coverage:", 100*(instructionsCovered/instructions + branchesCovered/branches + linesCovered/lines + conditionsCovered/conditions + methodsCovered/methods)/5 }'
      target/site/jacoco/jacoco.csv
  coverage: '/Average code coverage: \d+\.\d+/'
  artifacts:
    reports:
      junit:
        - api/target/surefire-reports/TEST-*.xml
    paths:
      - api/target/site/jacoco/jacoco.xml
      - "api/target/*.jar"

# taken from https://docs.gitlab.com/ee/user/project/merge_requests/test_coverage_visualization.html#java-and-kotlin-examples
report-coverage:
  stage: after_tests
  image: registry.gitlab.com/haynes/jacoco2cobertura:1.0.10@sha256:a511ca02828bbbf042a7aad53617a9a09803b7fd33eba9c940c2bd64c5288784
  script:
    - python /opt/cover2cover.py api/target/site/jacoco/jacoco.xml $CI_PROJECT_DIR/api/src/main/java/ > api/target/site/cobertura.xml
  needs: ["api:tests"]
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: api/target/site/cobertura.xml
  cache: {}

api:test-migrations:
  stage: tests
  services:
    - "postgres:17.1@sha256:163763c8afd28cae69035ce84b12d8180179559c747c0701b3cad17818a0dbc5"
  variables:
    POSTGRES_DB: db
    POSTGRES_USER: user
    POSTGRES_PASSWORD: password
  script:
    - cd api
    - CHANGELOG_FILE=target/changelog-$CI_JOB_ID.yaml
    - ./mvnw $MAVEN_CLI_OPTS
      "-Dliquibase.config.dbhost=postgres"
      "-Dliquibase.config.promptOnNonLocalDatabase=false"
      "-Dliquibase.diffChangeLogFile=${CHANGELOG_FILE}"
      clean compile liquibase:update liquibase:diff
    - apk add -q --no-cache --no-progress yq
      && yq eval --exit-status '.databaseChangeLog | length == 0' $CHANGELOG_FILE 2&>1 1>/dev/null
      || { echo -e "\e[31mYour entities are not in sync with your migrations. Did you forget to run 'make makeMigration' ?\e[0m"; exit 1;}

owasp_dependency_check:
  image: 
    name: owasp/dependency-check@sha256:a7f98261bf8fc9fd6ff181238bfa736ea14a62c46aa7d24b38482a6949735a00
    entrypoint: [""]
  stage: tests
  script: 
    - whoami 
    - cd api 
    - git config --global --add safe.directory $CI_PROJECT_DIR
    - git fetch origin main 
    - git show "$(git log -n 1 origin/main --pretty=format:"%H")":api/pom.xml > mainPom.xml
    - git diff --no-index -U0 mainPom.xml pom.xml> diffPom.txt  || echo "do not exit"  
    - if [ -s diffPom.txt ];  
        then ./mvnw $MAVEN_CLI_OPTS -B dependency:list  -Dsort=true -DoutputFile="dependency.txt" -DoutputAbsoluteArtifactFilename;
        ./mvnw $MAVEN_CLI_OPTS -f mainPom.xml -B dependency:list  -Dsort=true -DoutputFile="dependencyMain.txt" -DoutputAbsoluteArtifactFilename; 
        git diff --no-index -U0 dependencyMain.txt dependency.txt > diff.txt  || echo "do not exit" ;
        if [ -s diff.txt ]; then
          grep ^+  diff.txt | grep -Eo "(C:|/builds)/[a-zA-Z0-9./\?=_%:-]*" | while read line; do echo " -s "$line >> scanOpts.txt ; done ;
          if [ -s scanOpts.txt ]; 
            then SCAN_OPTS="$(cat scanOpts.txt | tr -d '\n')";
            echo -e "\e[34m The new dependencies :$SCAN_OPTS" ;
            /usr/share/dependency-check/bin/dependency-check.sh $SCAN_OPTS  
            --format JSON --format HTML --prettyPrint  --failOnCVSS 8 --data $CI_PROJECT_DIR/.m2/repository/org/owasp/dependency-check-data/script/ --disableAssembly --disableNugetconf 
            --disableNuspec --disableRetireJS ;
            if [ $(grep -c "vulnerabilities" dependency-check-report.json) -gt 0 ]; then echo -e "\033[31m The new added dependencies are vulnerable, check the report for more info"; exit 2; 
            else echo -e  "\e[34mNo vulnerabilities found"; fi;
          else echo -e "\033[31mError in scan oprions" ; fi 
        else echo -e "\e[34mNo new dependencies found" ; fi 
      else echo -e "\e[34mNo difference between poms files"; fi
  cache:
    # this duplicated cache is needed because this image runs with a different user than the others, causing permission problems
    key: dep-check-cache
    paths:
      - .m2/repository
  artifacts:
    when: on_failure
    paths:
        # Save the HTML and JSON report artifacts
      - "api/dependency-check-report.html"
  
api:check_reproducible_build:
  stage: after_tests
  script:
    - cd api
    - './mvnw $MAVEN_CLI_OPTS install:install-file -Dfile=$(ls target/*.jar)'
    - './mvnw $MAVEN_CLI_OPTS clean package artifact:compare -DskipTests'
    - 'grep -x "ko=0" target/springboilerplate-0.0.1-SNAPSHOT.buildcompare > /dev/null
      || { echo -e "\e[31mThe build is not reproducible. Check job artifact for details. Documentation: https://maven.apache.org/guides/mini/guide-reproducible-builds.html\e[0m"; exit 1;}'
  rules:
    - changes:
      - "api/pom.xml"
  artifacts:
    when: on_failure
    paths:
      - "api/target/springboilerplate-0.0.1-SNAPSHOT.buildcompare"
      - "api/target/reference/*.jar"
      - "api/target/*.jar"
  cache:
    paths:
      - .m2/repository
    # do not reupload cache because the jar was installed in the local repository 
    policy: pull
